version: 2
jobs: 
  build:
    docker:
      - image: node:10.15.1
      - image: nginx:alpine
      # - image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:latest
      #   aws_auth:
      #     aws_access_key_id: $AWS_ACCESS_KEY_ID
      #     aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    working_directory: /usr/src/www
    steps: 
      - checkout
      - setup_remote_docker
      
      - run:
          name: Env
          command: |
            echo 'export REACT_APP_CDN_URL=$REACT_APP_CDN_URL' >> $BASH_ENV
            echo 'export NODE_ENV=production' >> $BASH_ENV
            source $BASH_ENV
      
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run:
          name: Build the docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar $IMAGE_NAME

      - persist_to_workspace:
          root: .
          paths:
            - docker-image

  deploy:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace

      - run:
          name: Install awscli
          command: |
            # apt-get install python3-venv
            python3 -m venv venv
            . venv/bin/activate
            pip install awscli>=1.15.50

      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar

      - run:
          name: Push image to ECR
          command: |
            . venv/bin/activate
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker tag $IMAGE_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:latest
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_NAME:latest
    

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master